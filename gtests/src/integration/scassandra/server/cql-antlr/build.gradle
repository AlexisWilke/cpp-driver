apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'signing'
apply plugin: 'maven'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven { url "https://oss.sonatype.org/content/groups/public" }
    }
    dependencies {
        classpath 'me.champeau.gradle:antlr4-gradle-plugin:0.1'
    }
}

apply plugin: 'me.champeau.gradle.antlr4'
apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'

group 'org.scassandra'
jar.baseName = 'cql-antlr'

compileJava {
    sourceCompatibility = "1.6"
    targetCompatibility = "1.6"
}

if (!project.hasProperty("ossrhUsername")) {
    ext.ossrhUsername = "dummy"
}
if (!project.hasProperty("ossrhPassword")) {
    ext.ossrhPassword = "dummy"
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "https://oss.sonatype.org/content/groups/staging"
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourceJar
}

signing {
    sign configurations.archives
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            pom.artifactId = 'cql-antlr'

            pom.project {
                name 'Scassandra CQL antlr'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'CQL Types'
                url 'https://github.com/chbatey/cql-antlr'

                scm {
                    connection 'scm:git:git@github.com:scassandra/scassandra-server.git'
                    developerConnection 'git@github.com:scassandra/scassandra-server.git'
                    url 'https://github.com/scassandra/scassandra-server'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'chbatey'
                        name 'Christopher Batey'
                        email 'christopher.batey@gmail.com'
                    }
                }
            }
        }
    }
}

dependencies {
    compile "org.antlr:antlr4-runtime:$antlrVersion"
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "commons-codec:commons-codec:$commonsCodecVersion"
    compile "com.google.guava:guava:$guavaVersion"
    testCompile "ch.qos.logback:logback-classic:$logbackVersion"
    testCompile "org.mockito:mockito-all:$mockitoVersion"
    testCompile "junit:junit:$junitVersion"
}

antlr4 {
    output = new File('src/main/generated/org/scassandra/antlr4')
    extraArgs = ['-package', 'org.scassandra.antlr4']
}

task licenseFormatGenerated (type:nl.javadude.gradle.plugins.license.License) {
    source = fileTree(dir: "src/main/generated").include("**/*.java")
}

licenseFormatGenerated.dependsOn antlr4

// make the Java compile task depend on the antlr4 task
compileJava.dependsOn antlr4
compileJava.dependsOn licenseFormatGenerated


// add the generated source files to the list of java sources
sourceSets.main.java.srcDirs += 'src/main/generated'

// add antlr4 to classpath
configurations {
    compile.extendsFrom antlr4
}
